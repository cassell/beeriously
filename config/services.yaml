# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'us'
    mailer_user: 'support@beeriously.com'
    s3_bucket_prefix: 'http://localhost:62341/bucket/'
    s3_region: us-fake-1
    s3_endpoint: 'http://s3:4569'
    s3_key: s3_key
    s3_secret_key: s3_secret_key
    s3_bucket: bucket
    s3_acl: public-read
    s3_cache_control: 'public, max-age=86400'

jms_i18n_routing:
    default_locale: us
    locales: [us, de]
    strategy: prefix

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    Doctrine\ORM\EntityManagerInterface:
        alias: 'doctrine.orm.entity_manager'

    Beeriously\Infrastructure\Travis\:
        resource: '../src/Infrastructure/Travis'
        tags: ['console.command']

    Beeriously\Tests\DataFixtures\:
        resource: '../tests/DataFixtures'
        public: true

    Beeriously\Infrastructure\SessionHandler\PdoConnectionDsnProviderInterface:
        class: Beeriously\Infrastructure\SessionHandler\DoctrineConnectionToPdoDsnAdapter

    Beeriously\Infrastructure\SessionHandler\SessionHandler:
        public: true

    Beeriously\Brewer\Infrastructure\Registration\Form\RegistrationForm:
        class: Beeriously\Brewer\Infrastructure\Registration\Form\RegistrationForm
        tags:
            - { name: form.type, alias: app_user_registration }

    Beeriously\Brewer\Infrastructure\Controller\:
        resource: '../src/Brewer/Infrastructure/Controller'
        tags: ['controller.service_arguments']

    Beeriously\Brewer\Infrastructure\Controller\BrewerEditNameController:
        bind:
            $userManipulator: '@fos_user.util.user_manipulator'

    Beeriously\Brewer\Infrastructure\Form\BrewerChangeNameFormType:
        class: Beeriously\Brewer\Infrastructure\Form\BrewerChangeNameFormType

    Beeriously\Brewery\Infrastructure\Form\AddBrewer\AddBrewerFormType:
        class: Beeriously\Brewery\Infrastructure\Form\AddBrewer\AddBrewerFormType

    Beeriously\Brewery\Application\Preference\:
        resource: '../src/Brewery/Application/Preference'

    Beeriously\Brewery\Application\Preference\MassVolume\MassVolumePreferenceFactory:
        class: Beeriously\Brewery\Application\Preference\MassVolume\MassVolumePreferenceFactory

    Beeriously\Brewery\Infrastructure\Controller\:
        resource: '../src/Brewery/Infrastructure/Controller'
        tags: ['controller.service_arguments']

    Beeriously\Brewery\Infrastructure\Listeners\:
        resource: '../src/Brewery/Infrastructure/Listeners'
        bind:
            $userManipulator: '@fos_user.util.user_manipulator'

    Beeriously\Brewery\Application\Name\BreweryNameFactory: ~

    Beeriously\Infrastructure\Language\Controller\:
        resource: '../src/Infrastructure/Language/Controller'
        tags: ['controller.service_arguments']

    Beeriously\Calculations\Infrastructure\Controller\:
        resource: '../src/Calculations/Infrastructure/Controller'
        tags: ['controller.service_arguments']

    Beeriously\Dashboard\Infrastructure\Controller\:
        resource: '../src/Dashboard/Infrastructure/Controller'
        tags: ['controller.service_arguments']

    Beeriously\Universal\Event\Dispatcher:
        class: Beeriously\Universal\Event\Infrastructure\SymfonyEventDispatcherWrapper

    Beeriously\Infrastructure\Twig\TwigClassNameHelper:
        tags:
            - { name: twig.extension }

    Beeriously\Infrastructure\Twig\TwigFileHelper:
        arguments:
            $prefix: '%s3_bucket_prefix%'
        tags:
            - { name: twig.extension }

    Beeriously\Infrastructure\Twig\TwigTranslateDateTimeHelper:
        tags:
            - { name: twig.extension }

    Beeriously\Infrastructure\Form\FormTypeExtension:
        class: Beeriously\Infrastructure\Form\FormTypeExtension
        tags:
            - {name: form.type_extension, alias: form, extended_type: Symfony\Component\Form\Extension\Core\Type\FormType}

    Beeriously\Brewery\Infrastructure\Service\:
        resource: '../src/Brewery/Infrastructure/Service'
        bind:
            $userManipulator: '@fos_user.util.user_manipulator'

    Beeriously\Brewery\Infrastructure\Controller\BreweryAddBrewerController:
        bind:
            $userManipulator: '@fos_user.util.user_manipulator'
            $mailer: '@fos_user.mailer.twig_swift'

    Beeriously\Brewer\Infrastructure\Constraint\BrewerConstraintValidator: ~

    Aws\S3\S3Client:
        class: Aws\S3\S3Client
        public: true;
        arguments:
            $args: { version: 'latest', region: "%s3_region%", credentials: { key: "%s3_key%", secret: "%s3_secret_key%" }, endpoint: 'http://s3:4569' }

    Beeriously\Infrastructure\File\FileTransportToUploadStorageServiceInterface:
        class: Beeriously\Infrastructure\File\FileTransportToUploadStorageService
        arguments:
            $bucket: '%s3_bucket%'
            $acl: '%s3_acl%'
            $cacheControl: '%s3_cache_control%'

    Beeriously\Brewer\Infrastructure\Photo\GravatarPhotoServiceInterface:
        class: Beeriously\Infrastructure\Photo\GravatarPhotoService
        arguments:
            $gravatarHelper: '@templating.helper.gravatar'
            $defaultSize: 200
            $defaultRating: 'g'
            $defaultPhotoType: 'identicon'
            $defaultSecure: true

    GuzzleHttp\Client: ~

    Beeriously\Brewer\Infrastructure\DoctrineBrewerRepository: ~

    Beeriously\Brewer\Infrastructure\Listener\GrabProfileImageFromGravatarWhenUserIsActivatedListener:
        class: Beeriously\Brewer\Infrastructure\Listener\GrabProfileImageFromGravatarWhenUserIsActivatedListener
        arguments:
            $userManipulator: '@fos_user.util.user_manipulator'

